{
    "collab_server" : "",
    "contents" : " getwd()\n[1] \"C:/Users/BonGanI_2/Documents/STATS STUFF/Assignment 4/Data Set 1/Ass 4 Datae set 1\"\n> ls\nfunction (name, pos = -1L, envir = as.environment(pos), all.names = FALSE, \n    pattern, sorted = TRUE) \n{\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names, sorted))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n<bytecode: 0x000000000c84dee8>\n<environment: namespace:base>\n> ls()\ncharacter(0)\n> library(dplyr)\n\nAttaching package: ?dplyr?\n\nThe following objects are masked from ?package:stats?:\n\n    filter, lag\n\nThe following objects are masked from ?package:base?:\n\n    intersect, setdiff, setequal, union\n\nWarning message:\npackage ?dplyr? was built under R version 3.3.1 \n> library(tidyr)\nWarning message:\npackage ?tidyr? was built under R version 3.3.1 \n> library(ggplot2)\nWarning message:\npackage ?ggplot2? was built under R version 3.3.1 \n> mydf <- read.csv(\"ckwts.csv\", stringsAsFactors = FALSE)\n> dim(\"mydf\")\nNULL\n> dim(mydf)\n[1] 71  2\n> ckwts <- tbl_df(mydf)\n> rm(mydf)\n> tbl_df\nfunction (data) \n{\n    assert_that(is.data.frame(data))\n    as_data_frame(data)\n}\n<environment: namespace:dplyr>\n> ckwts\nSource: local data frame [71 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n..    ...       ...\n> select(ckwts, feed)\nSource: local data frame [71 x 1]\n\n        feed\n       <chr>\n1  horsebean\n2  horsebean\n3  horsebean\n4  horsebean\n5  horsebean\n6  horsebean\n7  horsebean\n8  horsebean\n9  horsebean\n10 horsebean\n..       ...\n> View(ckwts)\n> filter(ckwts, feed = 'horsebean', feed = 'linseed', feed = 'soybean', feed = 'sunflower', feed = 'meat meal', feed = 'casein')\nError: incompatible expression in filter\n> filter(ckwts, feed == 'horsebean', feed == 'linseed', feed == 'soybean', feed == 'sunflower', feed == 'meat meal', feed == 'casein')\nSource: local data frame [0 x 2]\n\nVariables not shown: weight <int>, feed <chr>.\n> new.df <- filter(ckwts, feed == 'horsebean', feed == 'linseed', feed == 'soybean', feed == 'sunflower', feed == 'meat meal', feed == 'casein')\n> View(new.df)\n> rm(new.df)\n> filter(ckwts, feed == \"horsebean\")\nSource: local data frame [10 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n> x\nError: object 'x' not found\n> ckwts\nSource: local data frame [71 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n..    ...       ...\n> ?mutate\n> View(ckwts)\n> ckwts2 <- mutate(ckwts, horsebean = filter(ckwts, weight, feed == \"horsebean\"))\nError: incompatible expression in filter\n> ckwts2 <- mutate(ckwts, horsebean = filter(ckwts, weight, feed == \"horsebean\"))\nError: incompatible expression in filter\n> horsebean.df <- filter(ckwts, weight >= 108, feed == \"horsebean\")\n> horsebean.df\nSource: local data frame [10 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n> horsebean.df <- filter(ckwts, weight >= 108, feed == \"horsebean\")\n> ckwts2 <- mutate(ckwts, horsebean == filter(ckwts, weight, feed == \"horsebean\"))\nError: object 'horsebean' not found\n> ckwts2 <- mutate(ckwts, horsebean == filter(ckwts, weight >= 108, feed == \"horsebean\"))\nError: object 'horsebean' not found\n> ?mutate\n> select(horsebean.df, -(feed))\nSource: local data frame [10 x 1]\n\n   weight\n    <int>\n1     179\n2     160\n3     136\n4     227\n5     217\n6     168\n7     108\n8     124\n9     143\n10    140\n> new.horsebean <- select(horsebean.df, -(feed))\n> new.horsebean\nSource: local data frame [10 x 1]\n\n   weight\n    <int>\n1     179\n2     160\n3     136\n4     227\n5     217\n6     168\n7     108\n8     124\n9     143\n10    140\n> rm(horsebean.df)\n> ckwts2 <- mutate(ckwts, horsebean == new.horsebean)\nError: object 'horsebean' not found\n> ckwts2 <- mutate(ckwts, \"horsebean\" == new.horsebean)\nError: wrong result size (10), expected 71 or 1\n> ?rm\n> ckwts2 <- mutate(ckwts, horsebean == weight(c(179, 160, 136, 227, 217, 168, 108, 124, 143, 140))\n+ \n+ ckwts2 <- mutate(ckwts, horsebean == weight(c(179, 160, 136, 227, 217, 168, 108, 124, 143, 140))\nError: unexpected symbol in:\n\"\nckwts2\"\n> ckwts2 <- mutate(ckwts, horsebean == filter(ckwts, weight >= 108, feed == \"horsebean\"))\nError: object 'horsebean' not found\n> ckwts2 <- mutate(ckwts, \"horsebean\" == filter(ckwts, weight >= 108, feed == \"horsebean\"))\nError: wrong result size (20), expected 71 or 1\n> ckwts2 <- mutate(ckwts, \"horsebean\" == filter(ckwts, weight >= 108, feed == \"horsebean\", -(feed)))\nError: invalid argument to unary operator\n> ckwts2 <- mutate(ckwts, \"horsebean\" == filter(ckwts, weight >= 108, feed == \"horsebean\", -feed))\nError: invalid argument to unary operator\n> ckwts2 <- mutate(ckwts, \"horsebean\" == select(ckwts, weight >= 108, feed == \"horsebean\", -feed))\nError: invalid argument to unary operator\n> ckwts2 <- mutate(ckwts, \"horsebean\" == select(ckwts, weight >= 108, feed == \"horsebean\"))\nError: All select() inputs must resolve to integer column positions.\nThe following do not:\n*  c(179L, 160L, 136L, 227L, 217L, 168L, 108L, 124L, 143L, 1...\n*  c(\"horsebean\", \"horsebean\", \"horsebean\", \"horsebean\", \"ho...\n> ckwts2 <- mutate(ckwts, \"horsebean\" == select(new.horsebean))\nError: 'data' must be of a vector type, was 'NULL'\n> ckwts2 <- mutate(ckwts, \"horsebean\" == select(new.horsebean, weights))\nError: All select() inputs must resolve to integer column positions.\nThe following do not:\n*  function (object, ...) ...\n> ?rename\n> rename(ckwts, \"horsebean\" = 1)\nError: Arguments to rename must be unquoted variable names. Arguments horsebean are not.\n> rename(ckwts, horsebean = 1)\nError: Arguments to rename must be unquoted variable names. Arguments horsebean are not.\n> ckwts\nSource: local data frame [71 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n..    ...       ...\n> spread(ckwts, feed, -weight)\nError: Invalid column specification\n> spread(ckwts, feed)\nError: Please supply column name\n> spread(ckwts, feed, weight)\nError: Duplicate identifiers for rows (60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71), (1, 2, 3, 4, 5, 6, 7, 8, 9, 10), (11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22), (49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59), (23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36), (37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48)\n> spread(ckwts, -weight, feed)\nError: Invalid column specification\n> ?boxplot\n> boxplot(ckwts$feed)\nError in x[floor(d)] + x[ceiling(d)] : \n  non-numeric argument to binary operator\n> ?barplot\n> ?qplot\n> ckwts\nSource: local data frame [71 x 2]\n\n   weight      feed\n    <int>     <chr>\n1     179 horsebean\n2     160 horsebean\n3     136 horsebean\n4     227 horsebean\n5     217 horsebean\n6     168 horsebean\n7     108 horsebean\n8     124 horsebean\n9     143 horsebean\n10    140 horsebean\n..    ...       ...\n> boxplot(weight$feed, )\nError in boxplot(weight$feed, ) : object 'weight' not found\n> boxplot(weight$feed,\n+         data = ckwts)\nError in boxplot(weight$feed, data = ckwts) : object 'weight' not found\n> boxplot('weight'$'feed',\n+         data = ckwts)\nError in \"weight\"$feed : $ operator is invalid for atomic vectors\n> boxplot(ckwts)\nError in x[floor(d)] + x[ceiling(d)] : \n  non-numeric argument to binary operator\n> ?boxplot\n> boxplot(weight$ckwts, feed$ckwts)\nError in boxplot(weight$ckwts, feed$ckwts) : object 'weight' not found\n> boxplot(weight$ckwts~feed$ckwts)\nError in eval(expr, envir, enclos) : object 'weight' not found\n> boxplot(ckwts$weight~ckwts$feed,\n+         col = \"red\")\n> View(ckwts)\n>         main = \"Boxplot illustrating the weights of chicks solely on casein, horsebean, linseed, soybean, and sunflower diets\",\nError: unexpected ',' in \"        main = \"Boxplot illustrating the weights of chicks solely on casein, horsebean, linseed, soybean, and sunflower diets\",\"\n>         xlab = \"Feed\",\nError: unexpected ',' in \"        xlab = \"Feed\",\"\n> boxplot(ckwts$weight~ckwts$feed,\n+         col = \"red\",\n+         main = \"Boxplot illustrating the wweights of chicks fed with diets comprising solely of casein, horsebean, linseed, meatmeal, soybean, and sunflower\",\n+         xlab = \"Feed\",\n+         ylab = \"Weight (g)\")\n> mean(ckwts)\n[1] NA\nWarning message:\nIn mean.default(ckwts) : argument is not numeric or logical: returning NA\n> boxplot <- boxplot(ckwts$weight~ckwts$feed,\n+         col = \"red\",\n+         main = \"Boxplot illustrating the wweights of chicks fed with diets comprising solely of casein, horsebean, linseed, meatmeal, soybean, and sunflower\",\n+         xlab = \"Feed\",\n+         ylab = \"Weight (g)\")\n> boxplot(ckwts$weight~ckwts$feed,\nboxplot(ckwts$weight~ckwts$feed,",
    "created" : 1467679249938.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1256455599",
    "id" : "F510CA74",
    "lastKnownWriteTime" : 1467027192,
    "last_content_update" : 1467027192,
    "path" : "~/STATS STUFF/Assignment 4/Data Set 1/Data Set 1 Console.txt",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "text"
}